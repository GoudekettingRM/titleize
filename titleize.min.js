let symbols=/[!¡⁄÷…æ«≤πø¬^˚¨∆¥˙†®´∑œåß∂ƒ∂©˙~µ∫√ç≈§±"#$%&'()*+,./:;<=>¿?@[\\\]^_`{|}~‹™›€£¢∞]/,lowerCasedWords=['a','an','the','and','but','or','nor','via','to','on','per','for','in','of','by','at','as','yet','so'],capitalize=e=>{let r=e.toString().split('');r[0]=r[0].toUpperCase();return r.join('')},cleanseSymbolList=e=>{let r=symbols.toString().slice(2,-2),t=e.split('');t.forEach(e=>{r=r.replace(new RegExp('[\\'+e+']','g'),'')});return r},titleize=(e,r = {})=>{let t=r.ignoreSymbols?cleanseSymbolList(r.ignoreSymbols):symbols.toString().slice(2,-2),o=new RegExp('['+t+']','gi');(!r.ignoreSymbols||!r.ignoreSymbols.split('').includes('-'))&&(e=e.replace(/-/g,' '));let n=e.toString().replace(o,'').split(' ').filter(e=>{if(e)return e});return n.map((e,t)=>{if(e===e.toUpperCase()&&r.keepUpperCaseWords){return e}else if(r.keepUpperCaseLetters){return capitalize(e)}else if(t===0||t==n.length-1){return capitalize(e.toLowerCase())}else if(lowerCasedWords.includes(e.toLowerCase())){return e.toLowerCase()}else{return capitalize(e.toLowerCase())}}).join(' ')};module.exports=titleize
